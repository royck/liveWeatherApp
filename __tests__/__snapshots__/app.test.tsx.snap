// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "flex": 1,
                "height": "100%",
                "justifyContent": "space-between",
                "width": "100%",
              }
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "height": "6%",
                  "justifyContent": "space-between",
                  "margin": 10,
                }
              }
            >
              <RCTSafeAreaView
                style={
                  {
                    "width": "78%",
                  }
                }
              >
                <TextInput
                  onChangeText={[Function]}
                  placeholder="Search"
                  style={
                    {
                      "borderRadius": 5,
                      "borderWidth": 1,
                      "height": 42,
                      "padding": 10,
                    }
                  }
                  testID="search-input"
                  value=""
                />
              </RCTSafeAreaView>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": true,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#246EE9",
                    "borderRadius": 5,
                    "height": 42,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 10,
                    "width": "20%",
                  }
                }
                testID="searchButton"
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "fontWeight": "bold",
                    }
                  }
                >
                  Search
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="loading-indicator"
            >
              <ActivityIndicator
                size="large"
              />
            </View>
            <View
              style={
                {
                  "alignItems": "flex-end",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-around",
                  "marginBottom": "5%",
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#246EE9",
                    "borderRadius": 5,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 10,
                    "width": "47%",
                  }
                }
                testID="current-weather-button"
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "fontWeight": "bold",
                    }
                  }
                >
                  Current Weather
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": true,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#A9A9A9",
                    "borderRadius": 5,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 10,
                    "width": "47%",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "fontWeight": "bold",
                    }
                  }
                >
                  Weather Forecast
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="LiveWeather"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
